pipeline {
  agent any
  environment {
    GITHUB_CREDENTIALS = credentials('07520621-3646-4fae-8063-574b454d2873')
    DOCKER_USER = credentials('f3553d7d-faa2-41e3-90c5-ff37e59e2ff6') // Docker Hub kullanýcý adý (Credentials ID)
    DOCKER_PASS = credentials('f3553d7d-faa2-41e3-90c5-ff37e59e2ff6') // Docker Hub þifresi (Credentials ID)
  }

  stages {
    stage('Clone Repository') {
      steps {
        sh '''
          echo "Starting repository clone..."
          git clone https://$GITHUB_CREDENTIALS_USR:$GITHUB_CREDENTIALS_PSW@github.com/ayseyavas/webProje.git
          echo "Repository clone completed successfully"
        '''
      }
    }

    stage('Build Docker Image') {
      steps {
        script {
          sh 'eval $(minikube docker-env)'
          
          sh '''
            echo "Starting Docker build..."
            docker build -t webproje .
            echo "Docker image built successfully"
          '''
        }
      }
    }

    stage('Push Docker Image') {
      steps {
        sh '''
          echo "Starting Docker image push..."
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          echo "Docker login successful"
          docker tag webproje ayseyavass/webproje:latest
          echo "Image tagged successfully"
          docker push ayseyavass/webproje:latest
          echo "Image pushed to Docker Hub successfully"
        '''
      }
    }

    stage('Deploy to Minikube') {
      steps {
        sh '''
          echo "Starting Kubernetes deployment..."
          kubectl apply -f k8s/Deployment.yaml
          kubectl apply -f k8s/Service.yaml
          echo "Kubernetes deployment completed"
          
          echo "Checking pod status..."
          kubectl get pods
          
          echo "Checking deployment details..."
          kubectl get deployments
          
          echo "Checking service status..."
          kubectl get services
          
          echo "Kubernetes deployment process completed"
        '''
      }
    }

    stage('Check Deployment Status') {
      steps {
        sh '''
          echo "Checking rollout status..."
          if kubectl rollout status deployment/webproje --timeout=300s; then
            echo "Deployment succeeded! Application is ready."
          else
            echo "Deployment failed! Check Kubernetes logs for details."
            exit 1
          fi
        '''
      }
    }
  }

  post {
    success {
      sh 'echo "Pipeline executed successfully! All stages completed."'
    }
    failure {
      sh 'echo "Pipeline failed! Check the logs above for errors."'
    }
  }
}
