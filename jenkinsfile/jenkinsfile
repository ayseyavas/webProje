pipeline {
  agent any
  environment {
    GOOGLE_APPLICATION_CREDENTIALS = credentials('be9bf3aa-09c9-46a8-97ec-b8bc41fc0dc0') // GCP Service Account
    CLUSTER_NAME = 'kobilcase-cluster' // Kubernetes Cluster Adý
    CLUSTER_ZONE = 'us-central1' // Cluster Lokasyonu
    DOCKER_USER = credentials('f3553d7d-faa2-41e3-90c5-ff37e59e2ff6') // Docker Hub kullanýcý adý (Credentials ID)
    DOCKER_PASS = credentials('f3553d7d-faa2-41e3-90c5-ff37e59e2ff6') // Docker Hub þifresi (Credentials ID)
  }

  stages {
    stage('Authenticate with GCP') {
      steps {
        script {
          // GCP kimlik doðrulamasý
          sh 'gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS'
          sh 'gcloud config set project $PROJECT_ID'
          sh 'gcloud container clusters get-credentials $CLUSTER_NAME --zone $CLUSTER_ZONE'
        }
      }
    }

    stage('Clone Repository') {
      steps {
        sh '''
          echo "Starting repository clone..."
          git clone https://github.com/ayseyavas/webProje.git
          echo "Repository clone completed successfully"
        '''
      }
    }

    stage('Build Docker Image') {
      steps {
        sh '''
          echo "Starting Docker build..."
          docker build -t webProje .
          echo "Docker image built successfully"
        '''
      }
    }

    stage('Push Docker Image') {
      steps {
        sh '''
          echo "Starting Docker image push..."
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          echo "Docker login successful"
          docker tag webProje ayseyavass/webProje:latest
          echo "Image tagged successfully"
          docker push ayseyavass/webProje:latest
          echo "Image pushed to Docker Hub successfully"
        '''
      }
    }

    stage('Deploy to Kubernetes') {
      steps {
        sh '''
          echo "Starting Kubernetes deployment..."
          helm upgrade --install webproje ./webProje-chart --namespace webproje --set image.repository=ayseyavass/webProje,image.tag=latest
          echo "Helm deployment completed"
          
          echo "Checking pod status..."
          kubectl get pods -n webproje
          
          echo "Checking deployment details..."
          kubectl get deployments -n webproje
          
          echo "Checking service status..."
          kubectl get services -n webproje
          
          echo "Kubernetes deployment process completed"
        '''
      }
    }

    stage('Check Deployment Status') {
      steps {
        sh '''
          echo "Checking rollout status..."
          if kubectl rollout status deployment/webproje --timeout=300s; then
            echo "Deployment succeeded! Application is ready."
          else
            echo "Deployment failed! Check Kubernetes logs for details."
            exit 1
          fi
        '''
      }
    }
  }

  post {
    success {
      sh 'echo "Pipeline executed successfully! All stages completed."'
    }
    failure {
      sh 'echo "Pipeline failed! Check the logs above for errors."'
    }
  }
}
